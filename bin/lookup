#!/usr/bin/env bash
# https://gitlab.com/wef/dotfiles/-/blob/master/bin/lookup

TIME_STAMP="20220627.143645"

# Copyright (C) 2019-2021 Bob Hepple < bob dot hepple at gmail dot com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# http://bhepple.freeshell.org

PROG=$( basename "$0" )
PASSWORD_FILE=$HOME/Sync/lookup.gjots.gpg2

initialise() {
    PROG=$(basename "$0")
    # shellcheck disable=SC2034
    VERSION="$TIME_STAMP"
    USAGE="
$PROG 'key'    Lookup a key-value pair in the encrypted file $PASSWORD_FILE
$PROG          With no argument, edit $PASSWORD_FILE

$PROG will prompt for and save the password using gpg2.

The password file is just an encrypted text file in the format:

key: secret
"

    case "$1" in
        -h|--help)
            echo "Usage: $PROG <key>"
            echo "$USAGE"
            exit 0
            ;;
    esac
    
    return 0
}

initialise "$@"

# categories are used as lookup keys by myautotype


[ "$1" ] || {
    ED=gjots2 # you can use whatever editor you like: gjots2 handles encrypted files
    if ! type $ED &>/dev/null; then
        ED=$EDITOR
        if [[ -z "$ED" ]] || ! type "$ED" &>/dev/null; then
            ED="vi"
        fi
    fi
    $ED "$PASSWORD_FILE"
    exit $?
}

gpg2 -d "$PASSWORD_FILE" </dev/null 2>/dev/null | grep "$1" | head -n 1 | sed "/^.*: /s///"

# Local Variables:
# mode: shell-script
# time-stamp-pattern: "4/TIME_STAMP=\"%:y%02m%02d.%02H%02M%02S\""
# eval: (add-hook 'before-save-hook 'time-stamp)
# End:
