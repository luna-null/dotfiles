#!/usr/bin/env bash
# https://gitlab.com/wef/dotfiles/-/blob/master/bin/myscreendump
# shellcheck disable=SC2034
TIME_STAMP="20230806.124631"

# Copyright (C) 2019-2021 Bob Hepple < bob dot hepple at gmail dot com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -eu

initialise() {
    local TEMP

    PROG=$(basename "$0")
    VERSION="$TIME_STAMP"
    TYPE="f"
    ARGUMENTS=""
    SHORT_DESC=""
    USAGE="popup a menu for bluetooth operations"
    ARGS="
ARGP_DELETE=quiet
ARGP_VERSION=$VERSION
ARGP_PROG=$PROG
ARGP_PREFIX=FOO_
##############################################################
#OPTIONS:
#name=default sname arg       type range   description
##############################################################
##############################################################
ARGP_ARGS=[--] $ARGUMENTS
ARGP_SHORT=$SHORT_DESC
ARGP_USAGE=$USAGE"

    TYPE='f'

    exec 4>&1
    eval "$(echo "$ARGS" | argp.sh "$@" 3>&1 1>&4 || echo exit $? )"
    exec 4>&-

    NEW_ARGS=( "$@" )
    return 0
}

initialise "$@" && set -- "${NEW_ARGS[@]:-}"

mapfile -t devices < <( bluetoothctl devices )

val=$(
    {
        for i in "${devices[@]}"; do
            # shellcheck disable=SC2086
            set -- $i
            echo "sudo rfkill unblock bluetooth; bluetoothctl power on; sleep 1; bluetoothctl connect $2 # $3"
        done
        echo "bluetoothctl power off; sudo rfkill block bluetooth"
        echo "sudo rfkill unblock bluetooth; bluetoothctl power on"
    } | wofi --dmenu --cache-file=/dev/null --sort-order=default -p "Bluetooth operations" ) || exit 0

[[ "$val" ]] && eval "$val"

# Local Variables:
# mode: shell-script
# time-stamp-pattern: "4/TIME_STAMP=\"%:y%02m%02d.%02H%02M%02S\""
# eval: (add-hook 'before-save-hook 'time-stamp)
# End:

